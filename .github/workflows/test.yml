name: Test
on: [deployment_status]

jobs:
  vercel-deployment-pending:
    runs-on: ubuntu-latest
    if: ${{ github.event.deployment_status.state == 'pending' }}
    steps:
      - name: Create pending status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/statuses/:sha
          repository: ${{ github.repository }}
          sha: ${{ github.sha }}
          context: test
          description: waiting for deployment
          state: pending
          target_url: ${{ github.event.deployment_status.target_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  vercel-deployment:
    runs-on: ubuntu-latest
    if: ${{ github.event.deployment_status.state == 'success' }}
    steps:
      - name: Create pending status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/statuses/:sha
          repository: ${{ github.repository }}
          sha: ${{ github.sha }}
          context: test
          description: testing deployment
          state: pending
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - run: npm ci
      - run: npm test
        id: test
        env:
          VERCEL_URL: ${{ github.event.deployment_status.target_url }}
      # Action does not set commit/pull reques status automatically, because it
      # is not triggered by the `push` event. So we have to set the commit
      # status manually.
      - name: Create commit status
        if: ${{ always() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/statuses/:sha
          repository: ${{ github.repository }}
          sha: ${{ github.sha }}
          context: test
          description: done
          state: ${{ steps.test.outcome}}
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
